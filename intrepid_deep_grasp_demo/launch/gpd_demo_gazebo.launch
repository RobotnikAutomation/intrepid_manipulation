<?xml version="1.0"?>
<launch>
  <arg name="load_cloud" default="false" doc="load point cloud from file"/>
  <arg name="joint_states_ns" default="/joint_states"/>

  <arg name="cartesian_limits" default="false" doc="specify cartesian limits on cloud in frame of optical link"/>
  <arg name="remove_table" default="true" doc="segment table plane from object"/>
  <arg name="xyz_lower_limits" default="[-0.3, -0.3, 0.0]" doc="lower x,y,z cartesian limits on cloud"/>
  <arg name="xyz_upper_limits" default="[0.3, 0.3, 0.75]" doc="upper x,y,z cartesian limits on cloud"/>

  <arg name="action_name" value="generate_grasps" doc="action name space"/>
  <arg name="frame_id" value="robot_base_footprint" doc="frame of the grasps sent to MTC"/> <!-- world / robot_base_footprint -->
  <arg unless="$(arg load_cloud)" name="point_cloud_topic" value="/merged_pcl/points" doc=" deep learning algorithm point cloud topic name"/>
  <arg name="camera_in_pcl_topic" value="/camera/depth/points" doc="point cloud topic name"/>

  <!-- file paths -->
  <arg name="robot_config" value="$(find intrepid_deep_grasp_demo)/config/jaco_description.yaml" doc="file path to robot configuration"/>
  <arg name="scene_config" value="$(find intrepid_deep_grasp_demo)/config/objects_config.yaml" doc="file path to environment configuration"/>
  <arg name="camera_config" value="$(find intrepid_deep_grasp_demo)/config/camera_calib/gazebo_camera.yaml" doc="file path to camera configuration"/>
  <arg if="$(arg load_cloud)" name="path_to_pcd_file" value="$(find moveit_task_constructor_gpd)/data/pointclouds/cylinder.pcd" doc="path to point cloud file"/>
  <arg name="path_to_gpd_config" value="$(find intrepid_deep_grasp_demo)/config/gpd_config.yaml" doc="path to GPD config and gripper params file"/>

  <!-- Run MTC pick and place -->
  <node name="deep_grasp_demo" pkg="intrepid_deep_grasp_demo" type="intrepid_deep_grasp_demo_node" output="screen">
      <param name="execute" value="true" />
      <param name="action_name" value="$(arg action_name)"/>
      <rosparam command="load" file="$(arg robot_config)"/>
      <rosparam command="load" file="$(arg scene_config)"/>
      <rosparam command="load" file="$(arg camera_config)"/>
      <param name="point_cloud_topic" value="$(arg point_cloud_topic)"/>
      <param name="camera_in_pcl_topic" value="$(arg camera_in_pcl_topic)"/>
      <remap from="/joint_states" to="$(arg joint_states_ns)" />
  </node>

  <!-- Grasp detection using GPD -->
  <node name="grasp_cloud_detection" pkg="moveit_task_constructor_gpd" type="grasp_cloud_detection" output="screen">
    <param if="$(arg load_cloud)" name="path_to_pcd_file" value="$(arg path_to_pcd_file)"/>
    <param unless="$(arg load_cloud)" name="point_cloud_topic" value="$(arg point_cloud_topic)"/>
    <rosparam command="load" file="$(arg camera_config)"/>
    <rosparam param="view_point">[0.0, 0.0, 0.0]</rosparam>
    <param name="load_cloud" value="$(arg load_cloud)"/>
    <param name="action_name" value="$(arg action_name)"/>
    <param name="frame_id" value="$(arg frame_id)"/>
    <param name="path_to_gpd_config" value="$(arg path_to_gpd_config)"/>
    <param name="cartesian_limits" value="$(arg cartesian_limits)"/>
    <rosparam param="xyz_lower_limits" subst_value="True">$(arg xyz_lower_limits)</rosparam>
    <rosparam param="xyz_upper_limits" subst_value="True">$(arg xyz_upper_limits)</rosparam>
    <param name="remove_table" value="$(arg remove_table)"/> 
  </node>
</launch>
